[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Movie Data Analysis",
    "section": "",
    "text": "1 Introduction\nMovies have consistently been integral to a region’s culture. Almost everyone has interacted with this form of media whether through means such as assignments, personal interest, or just plain curiosity. This is one of our motivating reasons in wanting to study movie data. On top of this, growing up surrounded by a variety of cultures, both of us have experienced movies in different languages which led us to view the differences in production across countries. With this, we are interested in studying if there are correlations in languages of movies and the genre they skew towards. We would also like to see if there exists biases in users’ movie ratings (ie. will people who enjoy a certain genre of movie rank that movie higher)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe data we are using primarily are “MovieLens” data. They were collected by GroupLens Research, a research group at the University of Minnesota, Twin Cities, aimed to provide recommendations of movies for users. The dataset we are using is called MovieLens 32M, which comprises of 32 million ratings and 2 million tags applied to 87,585 movies by 200,948 users. It includes “links.csv,” which assigns each movie an ID, and also lists out each movie’s corresponding ID on IMDb and TMDB (both are movie-rating websites). “movies.csv” comprises of each movie’s title and genres. “ratings.csv” documents each user’s rating of the movies they have seen. “tags.csv” comprises of users’ tags to the movies, expressed in words or short phrases. The dataset was collected in October 2023. We downloaded it directly from GroupLens’ website. In addition, we are going to cross-reference data from TMDB, which we will be getting via its open API. The data on TMDB are updated on an ongoing basis.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nvariable='/Users/erinma/Documents/STAT5702/ml-32m/'\nmovies=read.csv('/Users/erinma/Documents/STAT5702/ml-32m/movies.csv')\nratings=read.csv('/Users/erinma/Documents/STAT5702/ml-32m/ratings.csv')\n\n\n\n\nCode\nresult &lt;- merge(movies, ratings, by = \"movieId\", all = TRUE)\n\n\n\n\nCode\nsummary(result)\n\n\n    movieId          title              genres              userId      \n Min.   :     1   Length:32003357    Length:32003357    Min.   :     1  \n 1st Qu.:  1233   Class :character   Class :character   1st Qu.: 50053  \n Median :  3452   Mode  :character   Mode  :character   Median :100297  \n Mean   : 29332                                         Mean   :100279  \n 3rd Qu.: 44199                                         3rd Qu.:150451  \n Max.   :292757                                         Max.   :200948  \n                                                        NA's   :3153    \n     rating       timestamp        \n Min.   :0.50   Min.   :7.897e+08  \n 1st Qu.:3.00   1st Qu.:1.051e+09  \n Median :3.50   Median :1.273e+09  \n Mean   :3.54   Mean   :1.275e+09  \n 3rd Qu.:4.00   3rd Qu.:1.503e+09  \n Max.   :5.00   Max.   :1.697e+09  \n NA's   :3153   NA's   :3153       \n\n\n\n\nCode\nwrite.csv(result, \"result.csv\")\n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nna_counts &lt;- colSums(is.na(result))\n\nna_df &lt;- data.frame(\n  Column = names(na_counts),\n  NA_Count = na_counts\n)\n\nggplot(na_df, aes(x = Column, y = NA_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(\n    title = \"Number of NA Values by Column\",\n    x = \"Column\",\n    y = \"NA Count\"\n  )\n\n\n\n\n\n\n\n\n\nAfter merging the dataset movies with the dataset ratings, the graph and summary plot show us that there are around 3000 NA values in rating, timestamp, and userId. These are all columns in the original ratings dataset. This means that there are many movies that do not have ratings by any users.\n\n\nCode\nlinks &lt;- read.csv(file.path(variable, 'links.csv'))\n\nna_counts &lt;- data.frame(\n  Column = c(\"imdbId\", \"tmdbId\"),\n  NA_Count = c(sum(is.na(links$imdbId)), sum(is.na(links$tmdbId)))\n)\n\nggplot(na_counts, aes(x = Column, y = NA_Count, fill = Column)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(\n    title = \"Count of NA Values in imdbId and tmdbId\",\n    x = \"Column\",\n    y = \"Number of NA Values\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\")\n\n\n\n\n\n\n\n\n\nThe “links.csv” file shows each movie’s corresponding ID in IMDb and TMDB. The graph above shows that some movies do not have corresponding IDs in TMDB, because those movies are not found on TMDB.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nresult=read.csv(\"result.csv\")\n\navg_rating=result |&gt;\n  group_by(movieId) |&gt;\n  summarise(title = first(title),\n            genres = first(genres),\n            mean_score=mean(rating, na.rm=T)) \nggplot(avg_rating, aes(x = mean_score)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Histogram of Data\", x = \"Average Rating\", y = \"Number of Movies\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 3153 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\nratings=read.csv('/Users/erinma/Documents/STAT5702/ml-32m/ratings.csv')\n\n\navg_rating_user=ratings |&gt;\n  group_by(userId) |&gt;\n  summarise(mean_score=mean(rating)) \nggplot(avg_rating_user, aes(x = mean_score)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Histogram of Data\", x = \"Average Rating\", y = \"Number of Users\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\nCode\navg_rating$genreCount &lt;- sapply(avg_rating$genres, \n                                function(x) str_count(x, \"\\\\|\") + 1)\n\nggplot(avg_rating, aes(x = genreCount)) +\n  geom_bar() +\n  labs(title = \"Histogram of Data\", x = \"Genre Count\", y = \"Number of Movies\") +\n  scale_x_continuous(breaks = seq(min(avg_rating$genreCount), max(avg_rating$genreCount),\n                                  by = 1))\n\n\n\n\n\n\n\n\n\nCode\nrange(avg_rating$genreCount)\n\n\n[1]  1 10\n\n\n\n\nCode\navg_rating_genre=avg_rating |&gt;\n  group_by(genreCount) |&gt;\n  summarise(mean_score_genre=mean(mean_score, na.rm=T), \n            count_genre=n()) \n\nggplot(avg_rating_genre, aes(x = mean_score_genre, y = genreCount)) +\n  geom_point(size = 3, color = \"blue\") +\n  labs(\n    title = \"Cleveland Dot Plot Example\",\n    x = \"Value\",\n    y = \"Category\"\n  ) +\n  scale_x_continuous(limits=c(0, 5)) +\n   scale_y_continuous(\n    breaks = seq(1, nrow(avg_rating_genre), 1), \n  )\n\n\n\n\n\n\n\n\n\nCode\n  theme_minimal()\n\n\nList of 136\n $ line                            :List of 6\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ lineend      : chr \"butt\"\n  ..$ arrow        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_line\" \"element\"\n $ rect                            :List of 5\n  ..$ fill         : chr \"white\"\n  ..$ colour       : chr \"black\"\n  ..$ linewidth    : num 0.5\n  ..$ linetype     : num 1\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_rect\" \"element\"\n $ text                            :List of 11\n  ..$ family       : chr \"\"\n  ..$ face         : chr \"plain\"\n  ..$ colour       : chr \"black\"\n  ..$ size         : num 11\n  ..$ hjust        : num 0.5\n  ..$ vjust        : num 0.5\n  ..$ angle        : num 0\n  ..$ lineheight   : num 0.9\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : logi FALSE\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ title                           : NULL\n $ aspect.ratio                    : NULL\n $ axis.title                      : NULL\n $ axis.title.x                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.75points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.top                :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.75points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.x.bottom             : NULL\n $ axis.title.y                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num 90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.75points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.title.y.left               : NULL\n $ axis.title.y.right              :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : num -90\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.75points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text                       :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : chr \"grey30\"\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 1\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 2.2points 0points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.top                 :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : NULL\n  ..$ vjust        : num 0\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 2.2points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.x.bottom              : NULL\n $ axis.text.y                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 1\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 0points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.y.left                : NULL\n $ axis.text.y.right               :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 0points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.text.theta                 : NULL\n $ axis.text.r                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0.5\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : 'margin' num [1:4] 0points 2.2points 0points 2.2points\n  .. ..- attr(*, \"unit\")= int 8\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ axis.ticks                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.ticks.x                    : NULL\n $ axis.ticks.x.top                : NULL\n $ axis.ticks.x.bottom             : NULL\n $ axis.ticks.y                    : NULL\n $ axis.ticks.y.left               : NULL\n $ axis.ticks.y.right              : NULL\n $ axis.ticks.theta                : NULL\n $ axis.ticks.r                    : NULL\n $ axis.minor.ticks.x.top          : NULL\n $ axis.minor.ticks.x.bottom       : NULL\n $ axis.minor.ticks.y.left         : NULL\n $ axis.minor.ticks.y.right        : NULL\n $ axis.minor.ticks.theta          : NULL\n $ axis.minor.ticks.r              : NULL\n $ axis.ticks.length               : 'simpleUnit' num 2.75points\n  ..- attr(*, \"unit\")= int 8\n $ axis.ticks.length.x             : NULL\n $ axis.ticks.length.x.top         : NULL\n $ axis.ticks.length.x.bottom      : NULL\n $ axis.ticks.length.y             : NULL\n $ axis.ticks.length.y.left        : NULL\n $ axis.ticks.length.y.right       : NULL\n $ axis.ticks.length.theta         : NULL\n $ axis.ticks.length.r             : NULL\n $ axis.minor.ticks.length         : 'rel' num 0.75\n $ axis.minor.ticks.length.x       : NULL\n $ axis.minor.ticks.length.x.top   : NULL\n $ axis.minor.ticks.length.x.bottom: NULL\n $ axis.minor.ticks.length.y       : NULL\n $ axis.minor.ticks.length.y.left  : NULL\n $ axis.minor.ticks.length.y.right : NULL\n $ axis.minor.ticks.length.theta   : NULL\n $ axis.minor.ticks.length.r       : NULL\n $ axis.line                       : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ axis.line.x                     : NULL\n $ axis.line.x.top                 : NULL\n $ axis.line.x.bottom              : NULL\n $ axis.line.y                     : NULL\n $ axis.line.y.left                : NULL\n $ axis.line.y.right               : NULL\n $ axis.line.theta                 : NULL\n $ axis.line.r                     : NULL\n $ legend.background               : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.margin                   : 'margin' num [1:4] 5.5points 5.5points 5.5points 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing                  : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n $ legend.spacing.x                : NULL\n $ legend.spacing.y                : NULL\n $ legend.key                      : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.key.size                 : 'simpleUnit' num 1.2lines\n  ..- attr(*, \"unit\")= int 3\n $ legend.key.height               : NULL\n $ legend.key.width                : NULL\n $ legend.key.spacing              : 'simpleUnit' num 5.5points\n  ..- attr(*, \"unit\")= int 8\n $ legend.key.spacing.x            : NULL\n $ legend.key.spacing.y            : NULL\n $ legend.frame                    : NULL\n $ legend.ticks                    : NULL\n $ legend.ticks.length             : 'rel' num 0.2\n $ legend.axis.line                : NULL\n $ legend.text                     :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : 'rel' num 0.8\n  ..$ hjust        : NULL\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.text.position            : NULL\n $ legend.title                    :List of 11\n  ..$ family       : NULL\n  ..$ face         : NULL\n  ..$ colour       : NULL\n  ..$ size         : NULL\n  ..$ hjust        : num 0\n  ..$ vjust        : NULL\n  ..$ angle        : NULL\n  ..$ lineheight   : NULL\n  ..$ margin       : NULL\n  ..$ debug        : NULL\n  ..$ inherit.blank: logi TRUE\n  ..- attr(*, \"class\")= chr [1:2] \"element_text\" \"element\"\n $ legend.title.position           : NULL\n $ legend.position                 : chr \"right\"\n $ legend.position.inside          : NULL\n $ legend.direction                : NULL\n $ legend.byrow                    : NULL\n $ legend.justification            : chr \"center\"\n $ legend.justification.top        : NULL\n $ legend.justification.bottom     : NULL\n $ legend.justification.left       : NULL\n $ legend.justification.right      : NULL\n $ legend.justification.inside     : NULL\n $ legend.location                 : NULL\n $ legend.box                      : NULL\n $ legend.box.just                 : NULL\n $ legend.box.margin               : 'margin' num [1:4] 0cm 0cm 0cm 0cm\n  ..- attr(*, \"unit\")= int 1\n $ legend.box.background           : list()\n  ..- attr(*, \"class\")= chr [1:2] \"element_blank\" \"element\"\n $ legend.box.spacing              : 'simpleUnit' num 11points\n  ..- attr(*, \"unit\")= int 8\n  [list output truncated]\n - attr(*, \"class\")= chr [1:2] \"theme\" \"gg\"\n - attr(*, \"complete\")= logi TRUE\n - attr(*, \"validate\")= logi TRUE\n\n\n\n\nCode\nggplot(avg_rating, aes(x=mean_score))+\n  geom_histogram() + \n  facet_wrap(~genreCount, scales=\"free_y\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 3153 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\navg_rating_1=filter(avg_rating, genreCount==1)\n\nggplot(avg_rating_1, aes(x=mean_score))+\n  geom_histogram(alpha=0.5) + \n  facet_wrap(~genres, scales=\"free_y\")\n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 1924 rows containing non-finite outside the scale range\n(`stat_bin()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\nfilter(avg_rating, movieId==172063)\n\n\n# A tibble: 1 × 5\n  movieId title             genres      mean_score genreCount\n    &lt;int&gt; &lt;chr&gt;             &lt;chr&gt;            &lt;dbl&gt;      &lt;dbl&gt;\n1  172063 Carmencita (1894) Documentary       2.44          1\n\n\n\n\nCode\navg_rating_1$genres &lt;- fct_reorder(avg_rating_1$genres, avg_rating_1$genres, .fun = length, .desc = TRUE)\n\n\nggplot(avg_rating_1, aes(x = genres)) +\n  geom_bar() +\n  labs(title = \"Histogram of Data\", x = \"Genre Count\", y = \"Number of Movies\") +\n    theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nlibrary(readr)\n\ndata &lt;- read_tsv('title.basics.tsv')\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 11299730 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (8): tconst, titleType, primaryTitle, originalTitle, startYear, endYear,...\ndbl (1): isAdult\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\ndata$genres=NULL\n\n\n\n\nCode\ndata$primaryTitle=NULL\ndata$originalTitle=NULL\n\n\n\n\nCode\nvariable='/Users/erinma/Documents/STAT5702/ml-32m/'\nlinks &lt;- read.csv(file.path(variable, 'links.csv'))\n\n\njoinLink &lt;- merge(avg_rating, links, by = \"movieId\", all.x = TRUE)\n\n\n\n\nCode\ndata$tconst &lt;- as.numeric(gsub(\"\\\\D\", \"\", data$tconst))\n\n\n\n\nCode\nnames(data)[1] &lt;- \"imdbId\"\n\n\n\n\nCode\nimdbCombine &lt;- merge(joinLink, data, by = \"imdbId\", all.x = TRUE)\n\n\n\n\nCode\nimdbCombineMinutes=filter(imdbCombine, runtimeMinutes!='\\\\N')\n\n\n\n\nCode\nimdbCombineMinutes$runtimeMinutes=as.numeric(imdbCombineMinutes$runtimeMinutes)\n\n\n\n\nCode\nggplot(imdbCombineMinutes, aes(x=runtimeMinutes, y=mean_score))+\n  geom_hex()+\n  scale_fill_distiller(palette='Reds', direction=1) + \n  facet_wrap(~titleType) +\n  theme(axis.text.x = element_text(angle = 90))\n\n\nWarning: Removed 3110 rows containing non-finite outside the scale range\n(`stat_binhex()`).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  }
]