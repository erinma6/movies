[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Movie Data Analysis",
    "section": "",
    "text": "1 Introduction\nMovies have consistently been integral to a region’s culture. Almost everyone has interacted with this form of media whether through means such as assignments, personal interest, or just plain curiosity. This is one of our motivating reasons in wanting to study movie data. On top of this, growing up surrounded by a variety of cultures, both of us have experienced movies in different languages which led us to view the differences in production across countries. With this, we are interested in studying if there are correlations in languages of movies and the genre they skew towards. We would also like to see if there exists biases in users’ movie ratings (ie. will people who enjoy a certain genre of movie rank that movie higher)",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThe data we are using primarily are “MovieLens” data. They were collected by GroupLens Research, a research group at the University of Minnesota, Twin Cities, aimed to provide recommendations of movies for users. The dataset we are using is called MovieLens 32M, which comprises of 32 million ratings and 2 million tags applied to 87,585 movies by 200,948 users. It includes “links.csv,” which assigns each movie an ID, and also lists out each movie’s corresponding ID on IMDb and TMDB (both are movie-rating websites). “movies.csv” comprises of each movie’s title and genres. “ratings.csv” documents each user’s rating of the movies they have seen. “tags.csv” comprises of users’ tags to the movies, expressed in words or short phrases. The dataset was collected in October 2023. We downloaded it directly from GroupLens’ website. In addition, we are going to cross-reference data from TMDB, which we will be getting via its open API. The data on TMDB are updated on an ongoing basis.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nvariable='/Users/melodyma/Downloads/ml-32m'\nmovies=read.csv('/Users/melodyma/Downloads/ml-32m/movies.csv')\nratings=read.csv('/Users/melodyma/Downloads/ml-32m/ratings.csv')\n\n\n\n\nCode\nresult &lt;- merge(movies, ratings, by = \"movieId\", all = TRUE)\n\n\n\n\nCode\nsummary(result)\n\n\n    movieId          title              genres              userId     \n Min.   :     1   Length:1108238     Length:1108238     Min.   :   1   \n 1st Qu.:  1265   Class :character   Class :character   1st Qu.:1701   \n Median :  3861   Mode  :character   Mode  :character   Median :3400   \n Mean   : 37423                                         Mean   :3422   \n 3rd Qu.: 56174                                         3rd Qu.:5152   \n Max.   :292757                                         Max.   :6781   \n                                                        NA's   :59663  \n     rating        timestamp        \n Min.   :0.50    Min.   :8.255e+08  \n 1st Qu.:3.00    1st Qu.:1.048e+09  \n Median :4.00    Median :1.276e+09  \n Mean   :3.56    Mean   :1.277e+09  \n 3rd Qu.:4.00    3rd Qu.:1.506e+09  \n Max.   :5.00    Max.   :1.697e+09  \n NA's   :59663   NA's   :59663      \n\n\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nna_counts &lt;- colSums(is.na(result))\n\nna_df &lt;- data.frame(\n  Column = names(na_counts),\n  NA_Count = na_counts\n)\n\nggplot(na_df, aes(x = Column, y = NA_Count)) +\n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  labs(\n    title = \"Number of NA Values by Column\",\n    x = \"Column\",\n    y = \"NA Count\"\n  )\n\n\n\n\n\n\n\n\n\nAfter merging the dataset movies with the dataset ratings, the graph and summary plot show us that there are around 3000 NA values in rating, timestamp, and userId. These are all columns in the original ratings dataset. This means that there are many movies that do not have ratings by any users.\n\n\nCode\nlinks &lt;- read.csv(file.path(variable, 'links.csv'))\n\nna_counts &lt;- data.frame(\n  Column = c(\"imdbId\", \"tmdbId\"),\n  NA_Count = c(sum(is.na(links$imdbId)), sum(is.na(links$tmdbId)))\n)\n\nggplot(na_counts, aes(x = Column, y = NA_Count, fill = Column)) +\n  geom_bar(stat = \"identity\", color = \"black\") +\n  labs(\n    title = \"Count of NA Values in imdbId and tmdbId\",\n    x = \"Column\",\n    y = \"Number of NA Values\"\n  ) +\n  theme_minimal() +\n  scale_fill_brewer(palette = \"Set2\")\n\n\n\n\n\n\n\n\n\nThe “links.csv” file shows each movie’s corresponding ID in IMDb and TMDB. The graph above shows that some movies do not have corresponding IDs in TMDB, because those movies are not found on TMDB.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "Topic 1: Are certain genre selections correlated? Specifically, for people who watch a lot of movies of a particular genre, are they more likely to gravitate toward another genre, or perhaps they are more likely to steer clear of a different genre?\n\n\nCode\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.5\n✔ ggplot2   3.5.1     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(ggplot2)\nlibrary(gridExtra)\n\n\n\nAttaching package: 'gridExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nCode\nlibrary(grid)\n\n\n\n\nCode\nuser_genre_proportions &lt;- read.csv(\"~/EDAV Movies/Exploratory/user_genre_proportions.csv\")\n\n\n\n\nCode\ndata &lt;- user_genre_proportions[, !names(user_genre_proportions) %in% \"userId\"]\n\n# Ensure the column names are valid (e.g., no special characters)\ncolnames(data) &lt;- make.names(colnames(data))\n\n# Select the columns for the specific pairs you want to plot (removing \"Children\" and \"Fantasy\")\npairs_to_plot_p &lt;- list(\n  c(\"Adventure\", \"Fantasy\"),\n  c(\"Adventure\", \"Action\"),\n  c(\"Animation\", \"Children\"),\n  c(\"Animation\", \"Fantasy\"),\n  c(\"Children\", \"Musical\"),\n  c(\"Action\", \"Sci.Fi\")  # Keep Sci.Fi as is since make.names() converts it\n)\n\n# Calculate correlations for each pair\ncorrelations &lt;- sapply(pairs_to_plot_p, function(pair) {\n  cor(data[[pair[1]]], data[[pair[2]]], use = \"complete.obs\")\n})\n\n# Create individual scatter plots for each pair, adding the correlation value as text\nplot_list &lt;- lapply(1:length(pairs_to_plot_p), function(i) {\n  pair &lt;- pairs_to_plot_p[[i]]\n  \n  # Replace Sci.Fi with Sci-Fi in the titles\n  plot_title &lt;- gsub(\"Sci.Fi\", \"Sci-Fi\", paste(pair[1], \"vs\", pair[2]))\n  \n  ggplot(data, aes(x = .data[[pair[1]]], y = .data[[pair[2]]])) +\n    geom_point() +\n    labs(title = plot_title) +  # Only add the title, leave axis labels unchanged\n    annotate(\"text\", x = max(data[[pair[1]]]), y = max(data[[pair[2]]]), \n             label = paste(\"r =\", round(correlations[i], 2)), \n             hjust = 1, vjust = 1, color = \"blue\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 9),  # Smaller plot title\n      axis.title.x = element_text(size = 8),  # Smaller x-axis title\n      axis.title.y = element_text(size = 8),  # Smaller y-axis title\n      plot.margin = margin(t = 15, r = 5, b = 5, l = 5)  # Increase top margin\n    )\n})\n\n# Arrange the plots into one panel with adjusted margins\ngrid.arrange(grobs = plot_list, ncol = 3)\n\n# Adjust the position of the panel title to avoid clipping\ngrid.text(\"Positive Correlation between Genre Selection\", \n          x = 0.5, y = 0.982, gp = gpar(fontsize = 13, fontface = \"bold\"))\n\n\n\n\n\n\n\n\n\nThese pairs of genres demonstrate a relatively high positive correlation with each other, meaning that for each pair (A, B) shown in the graph, people who watch a lot of movies in genre A are more likely to also watch lots of movies in genre B.\n\n\nCode\n# Select the columns for the specific pairs you want to plot (removing \"Children\" and \"Fantasy\")\npairs_to_plot_n &lt;- list(\n  c(\"Adventure\", \"Drama\"),\n  c(\"Romance\", \"Action\"),\n  c(\"Comedy\", \"Thriller\")\n)\n\n# Calculate correlations for each pair\ncorrelations &lt;- sapply(pairs_to_plot_n, function(pair) {\n  cor(data[[pair[1]]], data[[pair[2]]], use = \"complete.obs\")\n})\n\n# Create individual scatter plots for each pair, adding the correlation value as text\nplot_list &lt;- lapply(1:length(pairs_to_plot_n), function(i) {\n  pair &lt;- pairs_to_plot_n[[i]]\n  \n  # Replace Sci.Fi with Sci-Fi in the titles\n  plot_title &lt;- gsub(\"Sci.Fi\", \"Sci-Fi\", paste(pair[1], \"vs\", pair[2]))\n  \n  ggplot(data, aes(x = .data[[pair[1]]], y = .data[[pair[2]]])) +\n    geom_point() +\n    labs(title = plot_title) +  # Only add the title, leave axis labels unchanged\n    annotate(\"text\", x = max(data[[pair[1]]]), y = max(data[[pair[2]]]), \n             label = paste(\"r =\", round(correlations[i], 2)), \n             hjust = 1, vjust = 1, color = \"blue\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 9),  # Smaller plot title\n      axis.title.x = element_text(size = 8),  # Smaller x-axis title\n      axis.title.y = element_text(size = 8),  # Smaller y-axis title\n      plot.margin = margin(t = 15, r = 5, b = 5, l = 5)  # Increase top margin\n    )\n})\n\n# Arrange the plots into one panel with adjusted margins\ngrid.arrange(grobs = plot_list, ncol = 3)\n\n# Adjust the position of the panel title to avoid clipping\ngrid.text(\"Negative Correlation between Genre Selection\", \n          x = 0.5, y = 0.982, gp = gpar(fontsize = 13, fontface = \"bold\"))\n\n\n\n\n\n\n\n\n\nThese pairs of genres demonstrate a relatively high negative correlation with each other, meaning that for each pair (A, B) shown in the graph, people who watch a lot of movies in genre A are more likely to not watch movies in genre B.\nTopic 2: Could movie ratings include people’s bias? If people tend to watch lots of movies of a certain genre, is it more likely that they would rate that specific genre higher?\n\n\nCode\nmerged_data &lt;- read.csv(\"~/EDAV Movies/Exploratory/Prop_AvgRating.csv\")\n\n\n\n\nCode\ngenres &lt;- c(\"Adventure\", \"Animation\", \"Children\", \"Comedy\", \"Fantasy\", \"Romance\", \n            \"Drama\", \"Action\", \"Crime\", \"Thriller\", \"Horror\", \"Mystery\", \"Sci.Fi\", \n            \"IMAX\", \"Documentary\", \"War\", \"Musical\", \"Western\", \"Film.Noir\")\n\navg_ratings_long &lt;- merged_data |&gt; \n  pivot_longer(\n    cols = paste0(\"avg_rating_\", genres),  \n    names_to = \"genre\",                    \n    values_to = \"avg_rating\"              \n  )\n\n# Reshape genre proportions\ngenre_proportions_long &lt;- merged_data |&gt; \n  pivot_longer(\n    cols = all_of(genres),          \n    names_to = \"genre\",             \n    values_to = \"proportion\"        \n  )\n\n# Step 3: Combine the reshaped data\n# Standardize genre column names to match (remove \"avg_rating_\" prefix in avg_ratings_long)\navg_ratings_long$genre &lt;- gsub(\"avg_rating_\", \"\", avg_ratings_long$genre)\ncombined_data &lt;- merge(avg_ratings_long, genre_proportions_long, by = c(\"userId\", \"genre\"))\n\n# Step 4: Create a binary indicator for proportion &gt;= 0.7\ncombined_data$proportion_group &lt;- ifelse(combined_data$proportion &gt;= 0.7, \"Genre Proportion &gt;= 0.7\", \"Genre Proportion &lt; 0.7\")\n\n# Step 5: Create the boxplot\nggplot(combined_data, aes(x = proportion_group, y = avg_rating, fill = proportion_group)) +\n  geom_boxplot() +\n  labs(title = \"Average Rating Distribution and Genre Preferences\",\n       x = \"Proportion Group\",\n       y = \"Average Rating\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Genre Proportion &gt;= 0.7\" = \"skyblue\", \"Genre Proportion &lt; 0.7\" = \"salmon\")) +\n  theme(legend.position = \"none\")\n\n\nWarning: Removed 18113 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n\n\n\n\n\n\n\n\n\nBy using a proportion cutoff of 0.7, we divide all ratings into two categories: ratings for genres that a specific user watches frequently (when the proportion is greater than or equal to 0.7) and ratings for genres they watch less frequently (when the proportion is less than 0.7). From the boxplot, we can tell that there is a difference in the distribution of average ratings between these two groups, demonstrating that genres watched more often tend to receive higher ratings in general compared to those watched less often.\nTopic 3: Do different genres tend to evoke different emotions in people?\n\n\nCode\nsentiment &lt;- read.csv(\"~/EDAV Movies/Exploratory/Sentiment.csv\")\nmovies_ohe &lt;- read.csv(\"~/EDAV Movies/Exploratory/Movies_OHE.csv\")\n\n\n\n\nCode\n# Merge sentiment and movie_ohe on 'movieId'\ncombined_data &lt;- merge(sentiment, movies_ohe, by = \"movieId\")\n\n# Select relevant columns (genres and sentiment_score)\ngenre_columns &lt;- c(\"Adventure\", \"Animation\", \"Children\", \"Comedy\", \"Fantasy\", \n                   \"Romance\", \"Drama\", \"Action\", \"Crime\", \"Thriller\", \"Horror\", \n                   \"Mystery\", \"Sci.Fi\", \"Documentary\", \"War\", \"Musical\", \n                   \"Western\", \"Film.Noir\")\n\n# Reshape data to a long format for easier plotting\nlong_data &lt;- combined_data %&gt;%\n  select(movieId, sentiment_score, all_of(genre_columns)) %&gt;%\n  pivot_longer(cols = all_of(genre_columns), names_to = \"Genre\", values_to = \"In_Genre\") %&gt;%\n  filter(In_Genre == 1)  # Keep only rows where the movie belongs to a genre\n\nlong_data$Genre &lt;- recode(long_data$Genre,\n                          \"Sci.Fi\" = \"Sci-Fi\",\n                          \"Film.Noir\" = \"Film-Noir\")\n\n# Generate boxplots\nggplot(long_data, aes(x = Genre, y = sentiment_score)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Boxplot of Sentiment Scores by Genre\",\n       x = \"Genre\",\n       y = \"Sentiment Score\")\n\n\n\n\n\n\n\n\n\nIn the dataset we used, users assigned tags to movies, which are words or phrases. We utilized the “syuzhet” package to derive the sentiment behind those tags. Positive values represent positive sentiments; zero means neutral sentiments; and negative values reflect negative sentiments. From the graph above, we observe that overall, genres that received a positive sentiment include: Animation, Children, Fantasy (slightly positive), Romance (slightly positive), and Musical. Genres that received a negative sentiment include: Action, Crime, Drama (slightly negative), Film-Noir, Horror, Mystery, Thriller, War, and Western. Genres that received a neutral sentiment are: Adventure, Comedy, Documentary, and Sci-Fi.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  }
]