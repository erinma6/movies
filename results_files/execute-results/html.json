{
  "hash": "392d9c8859d5bce3756fc2207f32df7f",
  "result": {
    "engine": "knitr",
    "markdown": "# Results\n\n## What is distribution of ratings for movies?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nresult=read.csv(\"result.csv\")\n\navg_rating=result |>\n  group_by(movieId) |>\n  summarise(title = first(title),\n            genres = first(genres),\n            mean_score=mean(rating, na.rm=T)) \nggplot(avg_rating, aes(x = mean_score)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Distribution of Ratings Across Movies\", x = \"Average Rating\", y = \"Number of Movies\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 59663 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n\nThe resulting histogram shows that the data is unimodal with the count peaking around 3. This means that the majority of movies are rated as average. It is also important to note that there are small peaks coming from the left and right of the data meaning that a select number of movies are consistently rated really good or really bad. \n\n## What is the Distribution of Ratings Across Users\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nratings=read.csv('/Users/melodyma/Downloads/ml-32m/ratings.csv')\n\n\navg_rating_user=ratings |>\n  group_by(userId) |>\n  summarise(mean_score=mean(rating)) \nggplot(avg_rating_user, aes(x = mean_score)) +\n  geom_histogram(fill = \"lightblue\", color = \"black\") +\n  labs(title = \"Histogram of Ratings Across Users\", x = \"Average Rating\", y = \"Number of Users\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n\nThis histogram shows that the dataset is skewing to the left with a peak between 3 and 4. The peak being above an average rating demonstrates that these users generally will rate movies fairly positively. \n\n## Certain Movies are Labeled Multiple Genres. Let's Review the Distribution of Movies and their Genre Counts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_rating$genreCount <- sapply(avg_rating$genres, \n                                function(x) str_count(x, \"\\\\|\") + 1)\n\nrange(avg_rating$genreCount)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1]  1 10\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot(avg_rating, aes(x = genreCount)) +\n  geom_bar() +\n  labs(title = \"Bar Chart of Movie Count Given The Number of Genres\", x = \"Genre Count\", y = \"Number of Movies\") +\n  scale_x_continuous(breaks = seq(min(avg_rating$genreCount), max(avg_rating$genreCount),\n                                  by = 1)) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\nSome movies fall under multiple genres and thus are labeled as such. To check this, we created a After an initial check to see that the range of labeled genres for each movie ranges from 1 to 10, we decided to make a graph seeing the number of movies that are labeled under each Genre Count. With this, we can see that the majority of movies are only labeled under one genre and the number of movies decreases as the genre count increases. \n\n## Does a Movie being labeled With More Genres Mean That it Will Be Better Rated?\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_rating_genre=avg_rating |>\n  group_by(genreCount) |>\n  summarise(mean_score_genre=mean(mean_score, na.rm=T), \n            count_genre=n()) \n\nggplot(avg_rating_genre, aes(x = mean_score_genre, y = genreCount)) +\n  geom_point(size = 3, color = \"blue\") +\n  labs(\n    title = \"Cleveland Dot Plot Display of the Average Rating Across Different Genre Counts\",\n    x = \"Average Rating\",\n    y = \"Genre Count\"\n  ) +\n  scale_x_continuous(limits=c(0, 5)) +\n   scale_y_continuous(\n    breaks = seq(1, nrow(avg_rating_genre), 1), \n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\nWe built a Cleveland Dot Plot to check on the Rating for each genre count. The resulting graph above shows no pattern between genre counts and average rating as it seems that movies with 7 genres labeled rank better than movies with 1 genre labeled but movies with 10 genres labeled rank worse than movies with 1 genre labeled. Additionally, all of these average ratings are grouped around a rating of 3 meaning that there is no genre count that is significantly rated better than the others. Furthermore, biases in average rating might occur as (as seen above in the bar chart) as the genre count increases, the number of movies in that category decreases which means that the mean is not accurate as it is based on less data. \n\n## Viewing the Distribution of Ratings for Movies Given the Genre Count\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(avg_rating, aes(x=mean_score))+\n  geom_histogram() + \n  facet_wrap(~genreCount, scales=\"free_y\") +\n  labs(title = \"Distribution of Ratings Faceted by Genre Count\", x = \"Average Rating\", y = \"Number of Movies\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 59663 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\nBy faceting on Genre Counts we can see if anomalies in distribution exist in certain genre counts. The resulting graph shows us that besides certain graphs that have minimal data, most genre counts follow the same distribution of having movies rated at an average rating\n\n## Let's see the Distribution of Ratings when Looking at Singular Genre Movies\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_rating_1=filter(avg_rating, genreCount==1)\n\nggplot(avg_rating_1, aes(x=mean_score))+\n  geom_histogram(alpha=0.5) + \n  facet_wrap(~genres, scales=\"free_y\") + \n  labs(title = \"Distribution of Ratings Faceted by Genres for Singular Genre Movies\", x = \"Average Rating\", y = \"Number of Movies\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 33450 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\nWhen faceting on genre for single genre movies, we can see that most genres follow the trends we previously discussed. However, we can note that the distribution of Children's Movies is very interesting as a large portion of movies are rated really poorly and a large portion of movies are rated really positively. Similarly, for Romance movies, it seems that the highest bar in the histogram occurs near 5 meaning that a large portion of Romance Movies are rated very positively. \n\n## Double Checking The Counts of Each Genre for Single Genre Movies. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\navg_rating_1$genres <- fct_reorder(avg_rating_1$genres, avg_rating_1$genres, .fun = length, .desc = TRUE)\n\n\nggplot(avg_rating_1, aes(x = genres)) +\n  geom_bar() +\n  labs(title = \"Bar Chart of the Number of Movies Based on Genre \", x = \"Genre\", y = \"Number of Movies\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\nAs seen above, the genre that is occurs most in the dataset is Drama while the genre that occurs least in the dataset is IMAX.\n\n## Do Programs with Longer Title Runtimes Score Have Higher Ratings?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\n\ndata <- read_tsv('/Users/melodyma/Downloads/ml-32m/title.basics.tsv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 11299730 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (8): tconst, titleType, primaryTitle, originalTitle, startYear, endYear,...\ndbl (1): isAdult\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ndata$genres=NULL\ndata$primaryTitle=NULL\ndata$originalTitle=NULL\nvariable='/Users/melodyma/Downloads/ml-32m'\nlinks <- read.csv(file.path(variable, 'links.csv'))\n\n\njoinLink <- merge(avg_rating, links, by = \"movieId\", all.x = TRUE)\ndata$tconst <- as.numeric(gsub(\"\\\\D\", \"\", data$tconst))\nnames(data)[1] <- \"imdbId\"\nimdbCombine <- merge(joinLink, data, by = \"imdbId\", all.x = TRUE)\nimdbCombineMinutes=filter(imdbCombine, runtimeMinutes!='\\\\N')\nimdbCombineMinutes$runtimeMinutes=as.numeric(imdbCombineMinutes$runtimeMinutes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(imdbCombineMinutes, aes(x=runtimeMinutes, y=mean_score))+\n  geom_hex()+\n  scale_fill_distiller(palette='Reds', direction=1) + \n  facet_wrap(~titleType) +\n  labs(title = \"Heat Map of Score Vs. RunTime \", x = \"Title RunTime\", y = \"Average Rating\")+\n  theme(axis.text.x = element_text(angle = 90))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 59046 rows containing non-finite outside the scale range\n(`stat_binhex()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Computation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nComputation failed in `stat_binhex()`.\nCaused by error in `compute_group()`:\n! The package \"hexbin\" is required for `stat_bin_hex()`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(imdbCombineMinutes, aes(x=runtimeMinutes, y=mean_score, color=titleType))+\n  geom_point(alpha=0.5)+\n  theme(axis.text.x = element_text(angle = 90)) +\n  labs(title = \"Scatterplot of Score Vs. RunTime \", x = \"Title RunTime\", y = \"Average Rating\", color = \"Film Type\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 59046 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\nThe Heat Map and Scatterplot show that very few title runtime goes above 400 minutes but there generally seems like there is a positive trend between Rating and Title RunTime. Furthermore, it seems that most shorts and tvshorts have the quickest title runtimes and that movie title runtimes seem to be generally higher than shorts \n\n## Are certain genre selections correlated?\n\nSpecifically, for people who watch a lot of movies of a particular genre, are they more likely to gravitate toward another genre, or perhaps they are more likely to steer clear of a different genre?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(gridExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'gridExtra'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    combine\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(grid)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nuser_genre_proportions <- read.csv(\"~/EDAV Movies/Exploratory/user_genre_proportions.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- user_genre_proportions[, !names(user_genre_proportions) %in% \"userId\"]\n\n# Ensure the column names are valid (e.g., no special characters)\ncolnames(data) <- make.names(colnames(data))\n\n# Select the columns for the specific pairs you want to plot (removing \"Children\" and \"Fantasy\")\npairs_to_plot_p <- list(\n  c(\"Adventure\", \"Fantasy\"),\n  c(\"Adventure\", \"Action\"),\n  c(\"Animation\", \"Children\"),\n  c(\"Animation\", \"Fantasy\"),\n  c(\"Children\", \"Musical\"),\n  c(\"Action\", \"Sci.Fi\")  # Keep Sci.Fi as is since make.names() converts it\n)\n\n# Calculate correlations for each pair\ncorrelations <- sapply(pairs_to_plot_p, function(pair) {\n  cor(data[[pair[1]]], data[[pair[2]]], use = \"complete.obs\")\n})\n\n# Create individual scatter plots for each pair, adding the correlation value as text\nplot_list <- lapply(1:length(pairs_to_plot_p), function(i) {\n  pair <- pairs_to_plot_p[[i]]\n  \n  # Replace Sci.Fi with Sci-Fi in the titles\n  plot_title <- gsub(\"Sci.Fi\", \"Sci-Fi\", paste(pair[1], \"vs\", pair[2]))\n  \n  ggplot(data, aes(x = .data[[pair[1]]], y = .data[[pair[2]]])) +\n    geom_point() +\n    labs(title = plot_title) +  # Only add the title, leave axis labels unchanged\n    annotate(\"text\", x = max(data[[pair[1]]]), y = max(data[[pair[2]]]), \n             label = paste(\"r =\", round(correlations[i], 2)), \n             hjust = 1, vjust = 1, color = \"blue\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 9),  # Smaller plot title\n      axis.title.x = element_text(size = 8),  # Smaller x-axis title\n      axis.title.y = element_text(size = 8),  # Smaller y-axis title\n      plot.margin = margin(t = 15, r = 5, b = 5, l = 5)  # Increase top margin\n    )\n})\n\n# Arrange the plots into one panel with adjusted margins\ngrid.arrange(grobs = plot_list, ncol = 3)\n\n# Adjust the position of the panel title to avoid clipping\ngrid.text(\"Positive Correlation between Genre Selection\", \n          x = 0.5, y = 0.982, gp = gpar(fontsize = 13, fontface = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\nThese pairs of genres demonstrate a relatively high positive correlation with each other, meaning that for each pair (A, B) shown in the graph, people who watch a lot of movies in genre A are more likely to also watch lots of movies in genre B.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Select the columns for the specific pairs you want to plot (removing \"Children\" and \"Fantasy\")\npairs_to_plot_n <- list(\n  c(\"Adventure\", \"Drama\"),\n  c(\"Romance\", \"Action\"),\n  c(\"Comedy\", \"Thriller\")\n)\n\n# Calculate correlations for each pair\ncorrelations <- sapply(pairs_to_plot_n, function(pair) {\n  cor(data[[pair[1]]], data[[pair[2]]], use = \"complete.obs\")\n})\n\n# Create individual scatter plots for each pair, adding the correlation value as text\nplot_list <- lapply(1:length(pairs_to_plot_n), function(i) {\n  pair <- pairs_to_plot_n[[i]]\n  \n  # Replace Sci.Fi with Sci-Fi in the titles\n  plot_title <- gsub(\"Sci.Fi\", \"Sci-Fi\", paste(pair[1], \"vs\", pair[2]))\n  \n  ggplot(data, aes(x = .data[[pair[1]]], y = .data[[pair[2]]])) +\n    geom_point() +\n    labs(title = plot_title) +  # Only add the title, leave axis labels unchanged\n    annotate(\"text\", x = max(data[[pair[1]]]), y = max(data[[pair[2]]]), \n             label = paste(\"r =\", round(correlations[i], 2)), \n             hjust = 1, vjust = 1, color = \"blue\") +\n    theme_minimal() +\n    theme(\n      plot.title = element_text(size = 9),  # Smaller plot title\n      axis.title.x = element_text(size = 8),  # Smaller x-axis title\n      axis.title.y = element_text(size = 8),  # Smaller y-axis title\n      plot.margin = margin(t = 15, r = 5, b = 5, l = 5)  # Increase top margin\n    )\n})\n\n# Arrange the plots into one panel with adjusted margins\ngrid.arrange(grobs = plot_list, ncol = 3)\n\n# Adjust the position of the panel title to avoid clipping\ngrid.text(\"Negative Correlation between Genre Selection\", \n          x = 0.5, y = 0.982, gp = gpar(fontsize = 13, fontface = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\nThese pairs of genres demonstrate a relatively high negative correlation with each other, meaning that for each pair (A, B) shown in the graph, people who watch a lot of movies in genre A are more likely to not watch movies in genre B.\n\n## Could movie ratings include people's bias?\n\nSpecifically, if people tend to watch lots of movies of a certain genre, is it more likely that they would rate that specific genre higher?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmerged_data <- read.csv(\"~/EDAV Movies/Exploratory/Prop_AvgRating.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenres <- c(\"Adventure\", \"Animation\", \"Children\", \"Comedy\", \"Fantasy\", \"Romance\", \n            \"Drama\", \"Action\", \"Crime\", \"Thriller\", \"Horror\", \"Mystery\", \"Sci.Fi\", \n            \"IMAX\", \"Documentary\", \"War\", \"Musical\", \"Western\", \"Film.Noir\")\n\navg_ratings_long <- merged_data |> \n  pivot_longer(\n    cols = paste0(\"avg_rating_\", genres),  \n    names_to = \"genre\",                    \n    values_to = \"avg_rating\"              \n  )\n\n# Reshape genre proportions\ngenre_proportions_long <- merged_data |> \n  pivot_longer(\n    cols = all_of(genres),          \n    names_to = \"genre\",             \n    values_to = \"proportion\"        \n  )\n\n# Step 3: Combine the reshaped data\n# Standardize genre column names to match (remove \"avg_rating_\" prefix in avg_ratings_long)\navg_ratings_long$genre <- gsub(\"avg_rating_\", \"\", avg_ratings_long$genre)\ncombined_data <- merge(avg_ratings_long, genre_proportions_long, by = c(\"userId\", \"genre\"))\n\n# Step 4: Create a binary indicator for proportion >= 0.7\ncombined_data$proportion_group <- ifelse(combined_data$proportion >= 0.7, \"Genre Proportion >= 0.7\", \"Genre Proportion < 0.7\")\n\n# Step 5: Create the boxplot\nggplot(combined_data, aes(x = proportion_group, y = avg_rating, fill = proportion_group)) +\n  geom_boxplot() +\n  labs(title = \"Average Rating Distribution and Genre Preferences\",\n       x = \"Proportion Group\",\n       y = \"Average Rating\") +\n  theme_minimal() +\n  scale_fill_manual(values = c(\"Genre Proportion >= 0.7\" = \"skyblue\", \"Genre Proportion < 0.7\" = \"salmon\")) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 18113 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\nBy using a proportion cutoff of 0.7, we divide all ratings into two categories: ratings for genres that a specific user watches frequently (when the proportion is greater than or equal to 0.7) and ratings for genres they watch less frequently (when the proportion is less than 0.7). From the boxplot, we can tell that there is a difference in the distribution of average ratings between these two groups, demonstrating that genres watched more often tend to receive higher ratings in general compared to those watched less often.\n\n## Do different genres tend to evoke different emotions in people?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsentiment <- read.csv(\"~/EDAV Movies/Exploratory/Sentiment.csv\")\nmovies_ohe <- read.csv(\"~/EDAV Movies/Exploratory/Movies_OHE.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Merge sentiment and movie_ohe on 'movieId'\ncombined_data <- merge(sentiment, movies_ohe, by = \"movieId\")\n\n# Select relevant columns (genres and sentiment_score)\ngenre_columns <- c(\"Adventure\", \"Animation\", \"Children\", \"Comedy\", \"Fantasy\", \n                   \"Romance\", \"Drama\", \"Action\", \"Crime\", \"Thriller\", \"Horror\", \n                   \"Mystery\", \"Sci.Fi\", \"Documentary\", \"War\", \"Musical\", \n                   \"Western\", \"Film.Noir\")\n\n# Reshape data to a long format for easier plotting\nlong_data <- combined_data %>%\n  select(movieId, sentiment_score, all_of(genre_columns)) %>%\n  pivot_longer(cols = all_of(genre_columns), names_to = \"Genre\", values_to = \"In_Genre\") %>%\n  filter(In_Genre == 1)  # Keep only rows where the movie belongs to a genre\n\nlong_data$Genre <- recode(long_data$Genre,\n                          \"Sci.Fi\" = \"Sci-Fi\",\n                          \"Film.Noir\" = \"Film-Noir\")\n\n# Generate boxplots\nggplot(long_data, aes(x = Genre, y = sentiment_score)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Boxplot of Sentiment Scores by Genre\",\n       x = \"Genre\",\n       y = \"Sentiment Score\")\n```\n\n::: {.cell-output-display}\n![](results_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\nIn the dataset we used, users assigned tags to movies, which are words or phrases. We utilized the \"syuzhet\" package to derive the sentiment behind those tags. Positive values represent positive sentiments; zero means neutral sentiments; and negative values reflect negative sentiments. From the graph above, we observe that overall, genres that received a positive sentiment include: Animation, Children, Fantasy (slightly positive), Romance (slightly positive), and Musical. Genres that received a negative sentiment include: Action, Crime, Drama (slightly negative), Film-Noir, Horror, Mystery, Thriller, War, and Western. Genres that received a neutral sentiment are: Adventure, Comedy, Documentary, and Sci-Fi. Interestingly, combined with the graph from 3.6, we don't necessarily observe a correlation between negative sentiments and lower rating scores.\n",
    "supporting": [
      "results_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}